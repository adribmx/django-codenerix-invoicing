# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2018-01-18 09:13
from __future__ import unicode_literals

import codenerix.fields
import codenerix.lib.helpers
import codenerix.models_people
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('codenerix_products', '0005_auto_20180118_0739'),
        ('codenerix_payments', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BillingSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('code', models.CharField(max_length=12, unique=True, verbose_name='Code')),
                ('description', models.CharField(blank=True, max_length=250, null=True, verbose_name='Description')),
                ('default', models.BooleanField(default=False, verbose_name='Default')),
                ('observations', models.TextField(blank=True, max_length=256, null=True, verbose_name='Observations')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CashDiary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('opened_date', models.DateTimeField(verbose_name='Opened Date')),
                ('opened_cash', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Opened Cash')),
                ('opened_cash_extra', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=10, null=True, verbose_name='Opened Cash Deviation')),
                ('opened_cash_notes', models.TextField(blank=True, default='', verbose_name='Opened Cash Notes')),
                ('opened_cards', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Opened Cards')),
                ('opened_cards_extra', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=10, null=True, verbose_name='Opened Cards Deviation')),
                ('opened_cards_notes', models.TextField(blank=True, default='', verbose_name='Opened Cards Notes')),
                ('closed_date', models.DateTimeField(blank=True, null=True, verbose_name='Closed Date')),
                ('closed_cash', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Closed Cash')),
                ('closed_cash_extra', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=10, null=True, verbose_name='Closed Cash Deviation')),
                ('closed_cash_notes', models.TextField(blank=True, default='', verbose_name='Closed Cash Notes')),
                ('closed_cards', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Closed Cards')),
                ('closed_cards_extra', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=10, null=True, verbose_name='Closed Cards Deviation')),
                ('closed_cards_notes', models.TextField(blank=True, default='', verbose_name='Closed Cards Notes')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CashMovement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('kind', models.CharField(choices=[('TRA', 'Wire transfer'), ('CAR', 'Card'), ('CAS', 'Cash'), ('CRE', 'Credit'), ('PYP', 'Paypal'), ('30C', '30 day credit'), ('60C', '60 day credit'), ('90C', '90 day credit')], max_length=3, verbose_name='Kind')),
                ('kind_card', models.CharField(blank=True, choices=[('VIS', 'Visa'), ('MAS', 'MasterCard'), ('AME', 'American Express'), ('OTH', 'Other')], max_length=3, null=True, verbose_name='Kind Card')),
                ('date_movement', models.DateTimeField(verbose_name='Date of movement')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('reason', models.TextField(blank=True, default=None, null=True, verbose_name='Reason')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('final_balance', models.CharField(blank=True, max_length=250, null=True, verbose_name='Balance')),
                ('credit', models.CharField(blank=True, max_length=250, null=True, verbose_name='Credit')),
                ('apply_equivalence_surcharge', models.BooleanField(default=False, verbose_name='Apply equivalence surcharge')),
                ('default_customer', models.BooleanField(default=False, verbose_name='Default customer')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
            bases=(codenerix.models_people.GenRole, models.Model),
        ),
        migrations.CreateModel(
            name='CustomerDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('doc_path', codenerix.fields.FileAngularField(max_length=200, upload_to=codenerix.lib.helpers.upload_path, verbose_name='Doc Path')),
                ('name_file', models.CharField(max_length=254, verbose_name='Name')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Haulier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('image', codenerix.fields.ImageAngularField(blank=True, max_length=200, null=True, upload_to=codenerix.lib.helpers.upload_path, verbose_name='Image')),
                ('name_file', models.CharField(blank=True, max_length=254, null=True, verbose_name='Name')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Name')),
                ('url_public', models.CharField(blank=True, max_length=250, null=True, verbose_name='Url public')),
                ('url_tracking', models.CharField(blank=True, max_length=250, null=True, verbose_name='Url tracking')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LegalNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('legal_note', models.TextField(blank=True, null=True, verbose_name='Legal_note')),
                ('public', models.BooleanField(default=False, verbose_name='Public')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PrintCounterDocumentAlbaran',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date')),
                ('status_document', models.CharField(choices=[('TM', 'Temporary'), ('DF', 'Definitive')], default='TM', max_length=2, verbose_name='Status document')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PrintCounterDocumentBasket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date')),
                ('status_document', models.CharField(choices=[('TM', 'Temporary'), ('DF', 'Definitive')], default='TM', max_length=2, verbose_name='Status document')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PrintCounterDocumentInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date')),
                ('status_document', models.CharField(choices=[('TM', 'Temporary'), ('DF', 'Definitive')], default='TM', max_length=2, verbose_name='Status document')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PrintCounterDocumentInvoiceRectification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date')),
                ('status_document', models.CharField(choices=[('TM', 'Temporary'), ('DF', 'Definitive')], default='TM', max_length=2, verbose_name='Status document')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PrintCounterDocumentOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date')),
                ('status_document', models.CharField(choices=[('TM', 'Temporary'), ('DF', 'Definitive')], default='TM', max_length=2, verbose_name='Status document')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PrintCounterDocumentTicket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date')),
                ('status_document', models.CharField(choices=[('TM', 'Temporary'), ('DF', 'Definitive')], default='TM', max_length=2, verbose_name='Status document')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PrintCounterDocumentTicketRectification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date')),
                ('status_document', models.CharField(choices=[('TM', 'Temporary'), ('DF', 'Definitive')], default='TM', max_length=2, verbose_name='Status document')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('balance', models.CharField(blank=True, max_length=250, null=True, verbose_name='Balance')),
                ('credit', models.CharField(blank=True, max_length=250, null=True, verbose_name='Credit')),
                ('shipping_tax', models.FloatField(blank=True, null=True, verbose_name='Impuesto de gastos de envio')),
                ('finance_surcharge', models.CharField(blank=True, choices=[('I', 'Taxable base'), ('F', 'Total bill')], max_length=1, null=True, verbose_name='Finance surcharge')),
                ('payment_methods', models.CharField(blank=True, choices=[('TRA', 'Wire transfer'), ('CAR', 'Card'), ('CAS', 'Cash'), ('CRE', 'Credit'), ('PYP', 'Paypal'), ('30C', '30 day credit'), ('60C', '60 day credit'), ('90C', '90 day credit')], max_length=3, null=True, verbose_name='Payment methods')),
                ('delivery_time', models.SmallIntegerField(default=1, verbose_name='Delivery time (days)')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
            bases=(codenerix.models_people.GenRole, models.Model),
        ),
        migrations.CreateModel(
            name='PurchasesAlbaran',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('code', models.CharField(max_length=64, verbose_name='Code')),
                ('date', models.DateTimeField(verbose_name='Date')),
                ('observations', models.TextField(blank=True, max_length=256, null=True, verbose_name='Observations')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchasesAlbaranDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('doc_path', codenerix.fields.FileAngularField(max_length=200, upload_to=codenerix.lib.helpers.upload_path, verbose_name='Doc Path')),
                ('name_file', models.CharField(max_length=254, verbose_name='Name')),
                ('code', models.CharField(max_length=256, verbose_name='Code')),
                ('date', models.DateTimeField(verbose_name='Date')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchasesBudget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('code', models.CharField(max_length=64, verbose_name='Code')),
                ('date', models.DateTimeField(verbose_name='Date')),
                ('observations', models.TextField(blank=True, max_length=256, null=True, verbose_name='Observations')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchasesBudgetDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('doc_path', codenerix.fields.FileAngularField(max_length=200, upload_to=codenerix.lib.helpers.upload_path, verbose_name='Doc Path')),
                ('name_file', models.CharField(max_length=254, verbose_name='Name')),
                ('code', models.CharField(max_length=256, verbose_name='Code')),
                ('date', models.DateTimeField(verbose_name='Date')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchasesInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('code', models.CharField(max_length=64, verbose_name='Code')),
                ('date', models.DateTimeField(verbose_name='Date')),
                ('observations', models.TextField(blank=True, max_length=256, null=True, verbose_name='Observations')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchasesInvoiceDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('doc_path', codenerix.fields.FileAngularField(max_length=200, upload_to=codenerix.lib.helpers.upload_path, verbose_name='Doc Path')),
                ('name_file', models.CharField(max_length=254, verbose_name='Name')),
                ('code', models.CharField(max_length=256, verbose_name='Code')),
                ('date', models.DateTimeField(verbose_name='Date')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchasesInvoiceRectification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('code', models.CharField(max_length=64, verbose_name='Code')),
                ('date', models.DateTimeField(verbose_name='Date')),
                ('observations', models.TextField(blank=True, max_length=256, null=True, verbose_name='Observations')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchasesInvoiceRectificationDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('doc_path', codenerix.fields.FileAngularField(max_length=200, upload_to=codenerix.lib.helpers.upload_path, verbose_name='Doc Path')),
                ('name_file', models.CharField(max_length=254, verbose_name='Name')),
                ('code', models.CharField(max_length=256, verbose_name='Code')),
                ('date', models.DateTimeField(verbose_name='Date')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchasesLineAlbaran',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('quantity', models.FloatField(verbose_name='Quantity')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('tax', models.FloatField(blank=True, default=0, null=True, verbose_name='Tax')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchasesLineBudget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('quantity', models.FloatField(verbose_name='Quantity')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('tax', models.FloatField(blank=True, default=0, null=True, verbose_name='Tax')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchasesLineInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('quantity', models.FloatField(verbose_name='Quantity')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('tax', models.FloatField(blank=True, default=0, null=True, verbose_name='Tax')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('feature_special_value', models.TextField(blank=True, null=True, verbose_name='Feature special values')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchasesLineInvoiceRectification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('quantity', models.FloatField(verbose_name='Quantity')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('tax', models.FloatField(blank=True, default=0, null=True, verbose_name='Tax')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchasesLineOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('quantity', models.FloatField(verbose_name='Quantity')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('tax', models.FloatField(blank=True, default=0, null=True, verbose_name='Tax')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchasesLineTicket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('quantity', models.FloatField(verbose_name='Quantity')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('tax', models.FloatField(blank=True, default=0, null=True, verbose_name='Tax')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchasesLineTicketRectification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('quantity', models.FloatField(verbose_name='Quantity')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('tax', models.FloatField(blank=True, default=0, null=True, verbose_name='Tax')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchasesOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('code', models.CharField(max_length=64, verbose_name='Code')),
                ('date', models.DateTimeField(verbose_name='Date')),
                ('observations', models.TextField(blank=True, max_length=256, null=True, verbose_name='Observations')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchasesOrderDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('doc_path', codenerix.fields.FileAngularField(max_length=200, upload_to=codenerix.lib.helpers.upload_path, verbose_name='Doc Path')),
                ('name_file', models.CharField(max_length=254, verbose_name='Name')),
                ('code', models.CharField(max_length=256, verbose_name='Code')),
                ('date', models.DateTimeField(verbose_name='Date')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchasesTicket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('code', models.CharField(max_length=64, verbose_name='Code')),
                ('date', models.DateTimeField(verbose_name='Date')),
                ('observations', models.TextField(blank=True, max_length=256, null=True, verbose_name='Observations')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchasesTicketDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('doc_path', codenerix.fields.FileAngularField(max_length=200, upload_to=codenerix.lib.helpers.upload_path, verbose_name='Doc Path')),
                ('name_file', models.CharField(max_length=254, verbose_name='Name')),
                ('code', models.CharField(max_length=256, verbose_name='Code')),
                ('date', models.DateTimeField(verbose_name='Date')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchasesTicketRectification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('code', models.CharField(max_length=64, verbose_name='Code')),
                ('date', models.DateTimeField(verbose_name='Date')),
                ('observations', models.TextField(blank=True, max_length=256, null=True, verbose_name='Observations')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchasesTicketRectificationDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('doc_path', codenerix.fields.FileAngularField(max_length=200, upload_to=codenerix.lib.helpers.upload_path, verbose_name='Doc Path')),
                ('name_file', models.CharField(max_length=254, verbose_name='Name')),
                ('code', models.CharField(max_length=256, verbose_name='Code')),
                ('date', models.DateTimeField(verbose_name='Date')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReasonModification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('code', models.CharField(max_length=15, unique=True, verbose_name='Code')),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
                ('enable', models.BooleanField(default=True, verbose_name='Enable')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReasonModificationLineAlbaran',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date')),
                ('quantity', models.FloatField(verbose_name='Quantity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReasonModificationLineBasket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date')),
                ('quantity', models.FloatField(verbose_name='Quantity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReasonModificationLineInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date')),
                ('quantity', models.FloatField(verbose_name='Quantity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReasonModificationLineInvoiceRectification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date')),
                ('quantity', models.FloatField(verbose_name='Quantity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReasonModificationLineOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date')),
                ('quantity', models.FloatField(verbose_name='Quantity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReasonModificationLineTicket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date')),
                ('quantity', models.FloatField(verbose_name='Quantity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReasonModificationLineTicketRectification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date')),
                ('quantity', models.FloatField(verbose_name='Quantity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalesAlbaran',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('lock', models.BooleanField(default=False, verbose_name='Lock')),
                ('parent_pk', models.IntegerField(blank=True, null=True, verbose_name='Parent pk')),
                ('code', models.CharField(max_length=64, verbose_name='Code')),
                ('code_counter', models.IntegerField(editable=False, verbose_name='Code counter')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date')),
                ('observations', models.TextField(blank=True, max_length=256, null=True, verbose_name='Observations')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Subtotal')),
                ('discounts', models.FloatField(default=0, editable=False, verbose_name='Discounts')),
                ('taxes', models.FloatField(default=0, editable=False, verbose_name='Taxes')),
                ('equivalence_surcharges', models.FloatField(default=0, editable=False, verbose_name='Equivalence surcharge')),
                ('total', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Total')),
                ('removed', models.BooleanField(default=False, editable=False, verbose_name='Removed')),
                ('summary_delivery', models.TextField(blank=True, max_length=256, null=True, verbose_name='Address delivery')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalesBasket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('lock', models.BooleanField(default=False, verbose_name='Lock')),
                ('parent_pk', models.IntegerField(blank=True, null=True, verbose_name='Parent pk')),
                ('code', models.CharField(max_length=64, verbose_name='Code')),
                ('code_counter', models.IntegerField(editable=False, verbose_name='Code counter')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date')),
                ('observations', models.TextField(blank=True, max_length=256, null=True, verbose_name='Observations')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Subtotal')),
                ('discounts', models.FloatField(default=0, editable=False, verbose_name='Discounts')),
                ('taxes', models.FloatField(default=0, editable=False, verbose_name='Taxes')),
                ('equivalence_surcharges', models.FloatField(default=0, editable=False, verbose_name='Equivalence surcharge')),
                ('total', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Total')),
                ('removed', models.BooleanField(default=False, editable=False, verbose_name='Removed')),
                ('role', models.CharField(choices=[('SC', 'Shopping cart'), ('BU', 'Budget'), ('WL', 'Wish list')], default='SC', max_length=2, verbose_name='Role basket')),
                ('signed', models.BooleanField(default=False, verbose_name='Signed')),
                ('public', models.BooleanField(default=False, verbose_name='Public')),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
                ('expiration_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Expiration date')),
                ('address_delivery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_sales_delivery', to='codenerix_invoicing.Address', verbose_name='Address delivery')),
                ('address_invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_sales_invoice', to='codenerix_invoicing.Address', verbose_name='Address invoice')),
                ('billing_series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='basket_sales', to='codenerix_invoicing.BillingSeries', verbose_name='Billing series')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='basket_sales', to='codenerix_invoicing.Customer', verbose_name='Customer')),
                ('haulier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basket_sales', to='codenerix_invoicing.Haulier', verbose_name='Haulier')),
                ('payment', models.ManyToManyField(blank=True, related_name='basket_sales', to='codenerix_payments.PaymentRequest', verbose_name='Payment Request')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalesInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('lock', models.BooleanField(default=False, verbose_name='Lock')),
                ('parent_pk', models.IntegerField(blank=True, null=True, verbose_name='Parent pk')),
                ('code', models.CharField(max_length=64, verbose_name='Code')),
                ('code_counter', models.IntegerField(editable=False, verbose_name='Code counter')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date')),
                ('observations', models.TextField(blank=True, max_length=256, null=True, verbose_name='Observations')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Subtotal')),
                ('discounts', models.FloatField(default=0, editable=False, verbose_name='Discounts')),
                ('taxes', models.FloatField(default=0, editable=False, verbose_name='Taxes')),
                ('equivalence_surcharges', models.FloatField(default=0, editable=False, verbose_name='Equivalence surcharge')),
                ('total', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Total')),
                ('removed', models.BooleanField(default=False, editable=False, verbose_name='Removed')),
                ('summary_invoice', models.TextField(blank=True, max_length=256, null=True, verbose_name='Address invoice')),
                ('billing_series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoice_sales', to='codenerix_invoicing.BillingSeries', verbose_name='Billing series')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoice_sales', to='codenerix_invoicing.Customer', verbose_name='Customer')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalesInvoiceRectification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('lock', models.BooleanField(default=False, verbose_name='Lock')),
                ('parent_pk', models.IntegerField(blank=True, null=True, verbose_name='Parent pk')),
                ('code', models.CharField(max_length=64, verbose_name='Code')),
                ('code_counter', models.IntegerField(editable=False, verbose_name='Code counter')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date')),
                ('observations', models.TextField(blank=True, max_length=256, null=True, verbose_name='Observations')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Subtotal')),
                ('discounts', models.FloatField(default=0, editable=False, verbose_name='Discounts')),
                ('taxes', models.FloatField(default=0, editable=False, verbose_name='Taxes')),
                ('equivalence_surcharges', models.FloatField(default=0, editable=False, verbose_name='Equivalence surcharge')),
                ('total', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Total')),
                ('removed', models.BooleanField(default=False, editable=False, verbose_name='Removed')),
                ('billing_series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoicerectification_sales', to='codenerix_invoicing.BillingSeries', verbose_name='Billing series')),
                ('invoice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='invoicerectification_sales', to='codenerix_invoicing.SalesInvoice', verbose_name='Invoice')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalesLineAlbaran',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('quantity', models.FloatField(verbose_name='Quantity')),
                ('notes', models.CharField(blank=True, max_length=256, null=True, verbose_name='Notes')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Subtotal')),
                ('discounts', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Discounts')),
                ('taxes', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Taxes')),
                ('equivalence_surcharges', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Equivalence surcharge')),
                ('total', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Total')),
                ('removed', models.BooleanField(default=False, editable=False, verbose_name='Removed')),
                ('albaran', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_albaran_sales', to='codenerix_invoicing.SalesAlbaran', verbose_name='Albaran')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalesLineBasket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('quantity', models.FloatField(verbose_name='Quantity')),
                ('notes', models.CharField(blank=True, max_length=256, null=True, verbose_name='Notes')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Subtotal')),
                ('discounts', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Discounts')),
                ('taxes', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Taxes')),
                ('equivalence_surcharges', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Equivalence surcharge')),
                ('total', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Total')),
                ('removed', models.BooleanField(default=False, editable=False, verbose_name='Removed')),
                ('price_recommended', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Recomended price base')),
                ('code', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Code')),
                ('description', models.CharField(blank=True, max_length=256, null=True, verbose_name='Description')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Discount (%)')),
                ('price_base', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price base')),
                ('tax', models.FloatField(blank=True, default=0, null=True, verbose_name='Tax (%)')),
                ('equivalence_surcharge', models.FloatField(blank=True, default=0, null=True, verbose_name='Equivalence surcharge (%)')),
                ('tax_label', models.CharField(blank=True, max_length=250, null=True, verbose_name='Tax Name')),
                ('basket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_basket_sales', to='codenerix_invoicing.SalesBasket', verbose_name='Basket')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_basket_sales', to='codenerix_products.ProductFinal', verbose_name='Product')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalesLineBasketOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('quantity', models.FloatField(verbose_name='Quantity')),
                ('line_budget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_basket_option_sales', to='codenerix_invoicing.SalesLineBasket', verbose_name='Line budget')),
                ('product_final', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_basket_option_sales', to='codenerix_products.ProductFinal', verbose_name='Product')),
                ('product_option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_basket_option_sales', to='codenerix_products.ProductFinalOption', verbose_name='Option')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalesLineInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('quantity', models.FloatField(verbose_name='Quantity')),
                ('notes', models.CharField(blank=True, max_length=256, null=True, verbose_name='Notes')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Subtotal')),
                ('discounts', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Discounts')),
                ('taxes', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Taxes')),
                ('equivalence_surcharges', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Equivalence surcharge')),
                ('total', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Total')),
                ('removed', models.BooleanField(default=False, editable=False, verbose_name='Removed')),
                ('price_recommended', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Recomended price base')),
                ('code', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Code')),
                ('description', models.CharField(blank=True, max_length=256, null=True, verbose_name='Description')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Discount (%)')),
                ('price_base', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price base')),
                ('tax', models.FloatField(blank=True, default=0, null=True, verbose_name='Tax (%)')),
                ('equivalence_surcharge', models.FloatField(blank=True, default=0, null=True, verbose_name='Equivalence surcharge (%)')),
                ('tax_label', models.CharField(blank=True, max_length=250, null=True, verbose_name='Tax Name')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_invoice_sales', to='codenerix_invoicing.SalesInvoice', verbose_name='Invoice')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalesLineInvoiceRectification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('quantity', models.FloatField(verbose_name='Quantity')),
                ('notes', models.CharField(blank=True, max_length=256, null=True, verbose_name='Notes')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Subtotal')),
                ('discounts', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Discounts')),
                ('taxes', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Taxes')),
                ('equivalence_surcharges', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Equivalence surcharge')),
                ('total', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Total')),
                ('removed', models.BooleanField(default=False, editable=False, verbose_name='Removed')),
                ('invoice_rectification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_invoicerectification_sales', to='codenerix_invoicing.SalesInvoiceRectification', verbose_name='Invoice rectification')),
                ('line_invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_invoicerectification_sales', to='codenerix_invoicing.SalesLineInvoice', verbose_name='Line invoice')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalesLineOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('quantity', models.FloatField(verbose_name='Quantity')),
                ('notes', models.CharField(blank=True, max_length=256, null=True, verbose_name='Notes')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Subtotal')),
                ('discounts', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Discounts')),
                ('taxes', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Taxes')),
                ('equivalence_surcharges', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Equivalence surcharge')),
                ('total', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Total')),
                ('removed', models.BooleanField(default=False, editable=False, verbose_name='Removed')),
                ('price_recommended', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Recomended price base')),
                ('code', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Code')),
                ('description', models.CharField(blank=True, max_length=256, null=True, verbose_name='Description')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Discount (%)')),
                ('price_base', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price base')),
                ('tax', models.FloatField(blank=True, default=0, null=True, verbose_name='Tax (%)')),
                ('equivalence_surcharge', models.FloatField(blank=True, default=0, null=True, verbose_name='Equivalence surcharge (%)')),
                ('tax_label', models.CharField(blank=True, max_length=250, null=True, verbose_name='Tax Name')),
                ('line_budget', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='line_order_sales', to='codenerix_invoicing.SalesLineBasket', verbose_name='Line budget')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalesLineOrderOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('quantity', models.FloatField(verbose_name='Quantity')),
                ('line_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_order_option_sales', to='codenerix_invoicing.SalesLineOrder', verbose_name='Line Order')),
                ('product_final', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_order_option_sales', to='codenerix_products.ProductFinal', verbose_name='Product')),
                ('product_option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_order_option_sales', to='codenerix_products.ProductFinalOption', verbose_name='Option')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalesLineTicket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('quantity', models.FloatField(verbose_name='Quantity')),
                ('notes', models.CharField(blank=True, max_length=256, null=True, verbose_name='Notes')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Subtotal')),
                ('discounts', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Discounts')),
                ('taxes', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Taxes')),
                ('equivalence_surcharges', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Equivalence surcharge')),
                ('total', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Total')),
                ('removed', models.BooleanField(default=False, editable=False, verbose_name='Removed')),
                ('price_recommended', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Recomended price base')),
                ('code', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Code')),
                ('description', models.CharField(blank=True, max_length=256, null=True, verbose_name='Description')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Discount (%)')),
                ('price_base', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price base')),
                ('tax', models.FloatField(blank=True, default=0, null=True, verbose_name='Tax (%)')),
                ('equivalence_surcharge', models.FloatField(blank=True, default=0, null=True, verbose_name='Equivalence surcharge (%)')),
                ('tax_label', models.CharField(blank=True, max_length=250, null=True, verbose_name='Tax Name')),
                ('line_order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='line_ticket_sales', to='codenerix_invoicing.SalesLineOrder', verbose_name='Line order')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalesLineTicketRectification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('quantity', models.FloatField(verbose_name='Quantity')),
                ('notes', models.CharField(blank=True, max_length=256, null=True, verbose_name='Notes')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Subtotal')),
                ('discounts', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Discounts')),
                ('taxes', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Taxes')),
                ('equivalence_surcharges', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Equivalence surcharge')),
                ('total', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Total')),
                ('removed', models.BooleanField(default=False, editable=False, verbose_name='Removed')),
                ('line_ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_ticketrectification_sales', to='codenerix_invoicing.SalesLineTicket', verbose_name='Line ticket')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalesOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('lock', models.BooleanField(default=False, verbose_name='Lock')),
                ('parent_pk', models.IntegerField(blank=True, null=True, verbose_name='Parent pk')),
                ('code', models.CharField(max_length=64, verbose_name='Code')),
                ('code_counter', models.IntegerField(editable=False, verbose_name='Code counter')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date')),
                ('observations', models.TextField(blank=True, max_length=256, null=True, verbose_name='Observations')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Subtotal')),
                ('discounts', models.FloatField(default=0, editable=False, verbose_name='Discounts')),
                ('taxes', models.FloatField(default=0, editable=False, verbose_name='Taxes')),
                ('equivalence_surcharges', models.FloatField(default=0, editable=False, verbose_name='Equivalence surcharge')),
                ('total', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Total')),
                ('removed', models.BooleanField(default=False, editable=False, verbose_name='Removed')),
                ('number_tracking', models.CharField(blank=True, max_length=128, null=True, verbose_name='Number of tracking')),
                ('status_order', models.CharField(choices=[('PE', 'Pending'), ('PA', 'Payment accepted'), ('SE', 'Sent'), ('DE', 'Delivered')], default='PE', max_length=2, verbose_name='Status')),
                ('payment_detail', models.CharField(blank=True, choices=[('TRA', 'Wire transfer'), ('CAR', 'Card'), ('CAS', 'Cash'), ('CRE', 'Credit'), ('PYP', 'Paypal'), ('30C', '30 day credit'), ('60C', '60 day credit'), ('90C', '90 day credit')], max_length=3, null=True, verbose_name='Payment detail')),
                ('source', models.CharField(blank=True, max_length=250, null=True, verbose_name='Source of purchase')),
                ('billing_series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_sales', to='codenerix_invoicing.BillingSeries', verbose_name='Billing series')),
                ('budget', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_sales', to='codenerix_invoicing.SalesBasket', verbose_name='Budget')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_sales', to='codenerix_invoicing.Customer', verbose_name='Customer')),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_sales', to='codenerix_payments.PaymentRequest', verbose_name='Payment Request')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalesOrderDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('doc_path', codenerix.fields.FileAngularField(max_length=200, upload_to=codenerix.lib.helpers.upload_path, verbose_name='Doc Path')),
                ('name_file', models.CharField(max_length=254, verbose_name='Name')),
                ('notes', models.TextField(blank=True, max_length=256, null=True, verbose_name='Notes')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalesReservedProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('quantity', models.FloatField(verbose_name='Quantity')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservedproduct_sales', to='codenerix_invoicing.Customer', verbose_name='Customer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservedproduct_sales', to='codenerix_products.ProductFinal', verbose_name='Product')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalesTicket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('lock', models.BooleanField(default=False, verbose_name='Lock')),
                ('parent_pk', models.IntegerField(blank=True, null=True, verbose_name='Parent pk')),
                ('code', models.CharField(max_length=64, verbose_name='Code')),
                ('code_counter', models.IntegerField(editable=False, verbose_name='Code counter')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date')),
                ('observations', models.TextField(blank=True, max_length=256, null=True, verbose_name='Observations')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Subtotal')),
                ('discounts', models.FloatField(default=0, editable=False, verbose_name='Discounts')),
                ('taxes', models.FloatField(default=0, editable=False, verbose_name='Taxes')),
                ('equivalence_surcharges', models.FloatField(default=0, editable=False, verbose_name='Equivalence surcharge')),
                ('total', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Total')),
                ('removed', models.BooleanField(default=False, editable=False, verbose_name='Removed')),
                ('billing_series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_sales', to='codenerix_invoicing.BillingSeries', verbose_name='Billing series')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_sales', to='codenerix_invoicing.Customer', verbose_name='Customer')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalesTicketRectification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('lock', models.BooleanField(default=False, verbose_name='Lock')),
                ('parent_pk', models.IntegerField(blank=True, null=True, verbose_name='Parent pk')),
                ('code', models.CharField(max_length=64, verbose_name='Code')),
                ('code_counter', models.IntegerField(editable=False, verbose_name='Code counter')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date')),
                ('observations', models.TextField(blank=True, max_length=256, null=True, verbose_name='Observations')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Subtotal')),
                ('discounts', models.FloatField(default=0, editable=False, verbose_name='Discounts')),
                ('taxes', models.FloatField(default=0, editable=False, verbose_name='Taxes')),
                ('equivalence_surcharges', models.FloatField(default=0, editable=False, verbose_name='Equivalence surcharge')),
                ('total', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Total')),
                ('removed', models.BooleanField(default=False, editable=False, verbose_name='Removed')),
                ('billing_series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticketrectification_sales', to='codenerix_invoicing.BillingSeries', verbose_name='Billing series')),
                ('ticket', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ticketrectification_sales', to='codenerix_invoicing.SalesTicket', verbose_name='Ticket')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TypeDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('code', models.CharField(max_length=128, verbose_name='Code')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TypeDocumentTextEN',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('type_document', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='en', to='codenerix_invoicing.TypeDocument')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TypeDocumentTextES',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('type_document', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='es', to='codenerix_invoicing.TypeDocument')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='salesorderdocument',
            name='kind',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_document_sales', to='codenerix_invoicing.TypeDocument', verbose_name='Document type'),
        ),
        migrations.AddField(
            model_name='salesorderdocument',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_document_sales', to='codenerix_invoicing.SalesOrder', verbose_name='Sales order'),
        ),
        migrations.AddField(
            model_name='saleslineticketrectification',
            name='ticket_rectification',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_ticketrectification_sales', to='codenerix_invoicing.SalesTicketRectification', verbose_name='Ticket rectification'),
        ),
        migrations.AddField(
            model_name='saleslineticket',
            name='ticket',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_ticket_sales', to='codenerix_invoicing.SalesTicket', verbose_name='Ticket'),
        ),
        migrations.AddField(
            model_name='saleslineorder',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_order_sales', to='codenerix_invoicing.SalesOrder', verbose_name='Sales order'),
        ),
        migrations.AddField(
            model_name='saleslineorder',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_order_sales', to='codenerix_products.ProductFinal', verbose_name='Product'),
        ),
        migrations.AddField(
            model_name='saleslineinvoice',
            name='line_order',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='line_invoice_sales', to='codenerix_invoicing.SalesLineOrder', verbose_name='Line order'),
        ),
        migrations.AddField(
            model_name='saleslinealbaran',
            name='line_order',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='line_albaran_sales', to='codenerix_invoicing.SalesLineOrder', verbose_name='Line orders'),
        ),
        migrations.AddField(
            model_name='saleslinealbaran',
            name='product_unique',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='line_albaran_sales', to='codenerix_products.ProductUnique', verbose_name='Product'),
        ),
    ]
